generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String      @id
  role              String
  provider          String
  refreshToken      String
  accessToken       String
  accessTokenExpiry DateTime
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt
  ClubOwner         ClubOwner[]
  profile           Profile?
}

model Profile {
  userId       String   @id @unique
  pronouns     String?
  bio          String?
  schoolYear   String?
  avatarUrl    String?
  websiteUrl   String?
  twitterUrl   String?
  facebookUrl  String?
  instagramUrl String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  name         String
  email        String   @unique
  user         User     @relation(fields: [userId], references: [id])
}

model Club {
  id                String      @id @default(uuid())
  name              String      @unique
  calendarUrl       String?
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt
  description       String
  logoUrl           String?
  joinStatus        String
  membershipProcess String
  memberCount       Int         @default(0)
  discordUrl        String?
  email             String      @unique
  facebookUrl       String?
  githubUrl         String?
  instagramUrl      String?
  websiteUrl        String?
  linkedinUrl       String?
  ClubOwner         ClubOwner[]
  tags              Tag[]       @relation("ClubTags")
}

model ClubOwner {
  userId String
  clubId String
  role   String
  club   Club   @relation(fields: [clubId], references: [id])
  user   User   @relation(fields: [userId], references: [id])

  @@id([userId, clubId])
}

model Tag {
  id    String @id @default(uuid())
  name  String @unique
  clubs Club[] @relation("ClubTags")
}
