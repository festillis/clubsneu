generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String   @id
  email             String   @unique
  name              String
  role              String
  provider          String
  refreshToken      String
  accessToken       String
  accessTokenExpiry DateTime
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  profile           Profile?
  memberClubs       Club[]   @relation("ClubMembers")
  ownedClubs        Club[]   @relation("ClubOwners")
  subscribedClubs   Club[]   @relation("ClubSubscribers")
}

model Profile {
  userId       String   @id @unique
  name         String
  pronouns     String?
  bio          String?
  schoolYear   String?
  avatarUrl    String?
  websiteUrl   String?
  twitterUrl   String?
  facebookUrl  String?
  instagramUrl String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model Club {
  id                String   @id @default(uuid())
  name              String   @unique
  email             String   @unique
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  description       String
  joinStatus        String
  membershipProcess String
  memberCount       Int      @default(0)
  calendarUrl       String?
  discordUrl        String?
  facebookUrl       String?
  githubUrl         String?
  instagramUrl      String?
  websiteUrl        String?
  linkedinUrl       String?
  logoUrl           String?
  members           User[]   @relation("ClubMembers")
  owners            User[]   @relation("ClubOwners")
  subscribers       User[]   @relation("ClubSubscribers")
  tags              Tag[]    @relation("ClubTags")
}

model Tag {
  id        String   @id @default(uuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  clubs     Club[]   @relation("ClubTags")
}
