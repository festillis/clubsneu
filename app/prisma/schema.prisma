// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // directUrl = env("DIRECT_URL")
  // If you want to use Prisma Migrate, you will need to manually create a shadow database
  // https://neon.tech/docs/guides/prisma-migrate#configure-a-shadow-database-for-prisma-migrate
  // make sure to append ?connect_timeout=10 to the connection string
  // shadowDatabaseUrl = env(“SHADOW_DATABASE_URL”)
}

model User {
  id                String   @id
  email             String   @unique
  name              String
  role              String
  provider          String
  refreshToken      String
  accessToken       String
  accessTokenExpiry DateTime
  profile           Profile?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  ownedClubs      Club[] @relation("ClubOwners")
  memberClubs     Club[] @relation("ClubMembers")
  subscribedClubs Club[] @relation("ClubSubscribers")
}

model Profile {
  userId String @id @unique

  name         String
  pronouns     String?
  bio          String?
  schoolYear   String?
  avatarUrl    String?
  websiteUrl   String?
  twitterUrl   String?
  facebookUrl  String?
  instagramUrl String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
}

model Club {
  id String @id @default(uuid())

  name        String  @unique
  description String
  calendarUrl String?
  logoUrl     String?
  tags        Tag[]   @relation("ClubTags")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  owners      User[] @relation("ClubOwners")
  members     User[] @relation("ClubMembers")
  subscribers User[] @relation("ClubSubscribers")
}

model Tag {
  id String @id @default(uuid())

  name String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  clubs Club[] @relation("ClubTags")
}
